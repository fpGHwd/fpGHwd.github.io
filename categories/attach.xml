<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dichotomy (Posts about ATTACH)</title><link>https://fpghwd.github.io/</link><description></description><atom:link href="https://fpghwd.github.io/categories/attach.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:ggwdwhu@gmail.com"&gt;suzumiya natsuhi&lt;/a&gt; </copyright><lastBuildDate>Thu, 17 Sep 2020 04:59:19 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Org2nikola image display</title><link>https://fpghwd.github.io/posts/org2nikola-image-display/</link><dc:creator>suzumiya natsuhi</dc:creator><description>&lt;div&gt;&lt;p&gt;
先&lt;a href="https://github.com/redguardtoo/org2nikola/issues/11"&gt;咨询&lt;/a&gt;了作者，然后得到了思路：获得一个对 output html 进行自定义 render 的函数，然后修改 html.
&lt;/p&gt;

&lt;p&gt;
修改配置文件，将这个自定义函数 &lt;code&gt;org2nikola-process-output-html-function&lt;/code&gt; 设置为
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;(org2nikola-process-output-html-function (lambda (html-text title post-slug)
                                           (progn
                                             (replace-regexp-in-string
                                              "file:.*[a-z0-9-]\\{34\\}\/"
                                              "https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/"
                                              html-text)
                                             (let* ((file-path (progn (string-match "/home.*[a-z0-9-]\\{34\\}.+png" html-text)
                                                                      (match-string 0 html-text))))

                                               (setq cmd (format "cp %s /home/wd/.config/nikola/output/images/" file-path))
                                               (shell-command cmd)))))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
然后就重新 &lt;code&gt;org2nikola-export-subtree&lt;/code&gt; 就可以了
&lt;/p&gt;

&lt;p&gt;
当然中间最重要的还是哪个正则表达式，我需要匹配字符串的是：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-lisp"&gt;
(setq test-string "https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20200825_110429screenshot.png")

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
需要将前面的 &lt;code&gt;https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/&lt;/code&gt; 替换为 &lt;code&gt;https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
调试正则表达式，用到了 &lt;code&gt;re-builder&lt;/code&gt; 简直不要太好用。
&lt;/p&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20200917_113516screenshot.png" alt="_20200917_113516screenshot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>ATTACH</category><category>emacs</category><guid>https://fpghwd.github.io/posts/org2nikola-image-display/</guid><pubDate>Wed, 16 Sep 2020 19:35:39 GMT</pubDate></item><item><title>No news is good news</title><link>https://fpghwd.github.io/posts/no-news-is-good-news/</link><dc:creator>suzumiya natsuhi</dc:creator><description>&lt;div&gt;&lt;p&gt;
今天看书看到了在如何在应用程序中加载/链接共享库，书中以高性能 Web 服务器的例子来说明，对于一个繁忙的网站，运行时加载和链接共享库对于服务质量的提升意义重大。
&lt;/p&gt;

&lt;p&gt;
加载和链接共享库用到的是 &lt;code&gt;dlfcn.h&lt;/code&gt; 中的 &lt;code&gt;dlopen/dlsym/dlclose&lt;/code&gt; 的三个函数。还有最后一个检查前面三个调用情况的函数： &lt;code&gt;dlerror&lt;/code&gt; ，声明为：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre&gt;&lt;code class="lang-cpp"&gt;const char *dlerror(void);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20200825_110429screenshot.png" alt="_20200825_110429screenshot.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
如果调用前三个函数没有发生错误，则返回NULL。我想起了以前看过的K&amp;amp;R的函数返回值如果为0则是运行成功，当时还特意想着为什么这么来设计，还学到了标题的那句话“没有消息就是好消息”。
&lt;/p&gt;

&lt;p&gt;
当然其实要说：“成功都是一样的，失败各有各的不同的原因”也是没有问题的，毕竟比“失败都是一样的，成功各有各的不同”这句话要更为实诚一点。我觉得这说明从失败中获取原因是有价值的，而从成功中找原因应该没有什么大的价值吧。怎么回事，好像顺手黑了成功学一把，这不是我的本意。
&lt;/p&gt;&lt;/div&gt;</description><category>ATTACH</category><category>csapp</category><guid>https://fpghwd.github.io/posts/no-news-is-good-news/</guid><pubDate>Mon, 24 Aug 2020 18:52:31 GMT</pubDate></item></channel></rss>