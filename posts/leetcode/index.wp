<p>
<a href="https://leetcode.com/problems/minimum-index-sum-of-two-lists/">599. Minimum Index Sum of Two Lists</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
class Solution {
  public:
    vector&lt;string&gt; findRestaurant(vector&lt;string&gt; &amp;list1,
                                  vector&lt;string&gt; &amp;list2) {
        unordered_map&lt;string, int&gt; umsi;
        for (int i = 0; i &lt; list1.size(); i++) {
            umsi[list1[i]] = i;
        }

        int idx_sum = INT_MAX;
        vector&lt;string&gt; vsr;
        for (int i = 0; i &lt; list2.size(); i++) {
            if (umsi.find(list2[i]) != umsi.end()) {
                if (idx_sum &gt; i + umsi[list2[i]]) {
                    vsr.clear();
                    vsr.push_back(list2[i]);
                    idx_sum = i + umsi[list2[i]];
                } else if (idx_sum == i + umsi[list2[i]]) {
                    vsr.push_back(list2[i]);
                }
            }
        }

        return vsr;
    }
};


</code></pre>

</div>

<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (133/133)

Runtime: 104 ms, faster than 98.98% of C++ submissions.

Memory Usage: 36.9 MB, less than 63.53% of C++ submissions.

</code></pre>

</div>
