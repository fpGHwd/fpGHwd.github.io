<p>
<a href="https://leetcode.com/problems/flood-fill/">733. Flood Fill</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
class Solution {
  public:
    vector&lt;vector&lt;int&gt;&gt;
    floodFill(vector&lt;vector&lt;int&gt;&gt; &amp;image, int sr, int sc, int newColor) {
        int old_color = image[sr][sc];
        if (old_color == newColor)
            return image;

        floodFill(image, sr, sc, newColor, old_color);

        return image;
    }

    void floodFill(vector&lt;vector&lt;int&gt;&gt; &amp;image,
                   int sr,
                   int sc,
                   int newColor,
                   int oldColor) {
        // paint
        image[sr][sc] = newColor;

        // paint others
        if (sr - 1 &gt;= 0 &amp;&amp; oldColor == image[sr - 1][sc])
            floodFill(image, sr - 1, sc, newColor);
        if (sr + 1 &lt; image.size() &amp;&amp; oldColor == image[sr + 1][sc])
            floodFill(image, sr + 1, sc, newColor);
        if (sc - 1 &gt;= 0 &amp;&amp; oldColor == image[sr][sc - 1])
            floodFill(image, sr, sc - 1, newColor);
        if (sc + 1 &lt; image[0].size() &amp;&amp; oldColor == image[sr][sc + 1])
            floodFill(image, sr, sc + 1, newColor);
    }
};

</code></pre>

</div>

<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (277/277)

Runtime: 12 ms, faster than 97.05% of C++ submissions.

Memory Usage: 14.9 MB, less than 5.01% of C++ submissions.

</code></pre>

</div>

<p>
第一次做的时候忽略了没有保存 <code>old_color</code> ，后面有问题。</p>
