<p>
<a href="https://leetcode.com/problems/merge-two-binary-trees/">617. Merge Two Binary Trees</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
  public:
    TreeNode *mergeTrees(TreeNode *t1, TreeNode *t2) {
        if (t1 == NULL &amp;&amp; t2 == NULL)
            return NULL;
        TreeNode *t3 = new TreeNode((t1 == NULL ? 0 : t1-&gt;val) +
                                    (t2 == NULL ? 0 : t2-&gt;val));
        t3-&gt;left = mergeTrees(t1 == NULL ? NULL : t1-&gt;left,
                              t2 == NULL ? NULL : t2-&gt;left);
        t3-&gt;right = mergeTrees(t1 == NULL ? NULL : t1-&gt;right,
                               t2 == NULL ? NULL : t2-&gt;right);
        return t3;
    }
};

</code></pre>

</div>

<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (183/183)

Runtime: 56 ms, faster than 47.43% of C++ submissions.

Memory Usage: 35.7 MB, less than 5.05% of C++ submissions.

</code></pre>

</div>
