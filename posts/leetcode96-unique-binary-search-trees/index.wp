<p>
<a href="https://leetcode.com/problems/unique-binary-search-trees/">96. Unique Binary Search Trees</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
class Solution {
  public:
    int numTrees(int n) {
        if (n == 0 || n == 1)return 1;

        int count = 0;
        for (int i = 1; i &lt;= n; i++)count += numTrees(i - 1) * numTrees(n - i);

        return count;
    }
};
</code></pre>

</div>

<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (19/19)

Runtime: 1220 ms, faster than 11.92% of C++ submissions.

Memory Usage: 6 MB, less than 59.10% of C++ submissions.

</code></pre>

</div>

<p>
用 DP 做更快一点，但递归对理解更友好些。反过来， DP 不就是递归的递推公式的代数形式嘛。能用递归就做出来的事情，就不要麻烦迭代了，毕竟<a href="http://algosaur.us/recursion/">&ldquo;To iterate is human, to recurse, divine.&rdquo;</a>，能请神去做的事情，就不要麻烦人啦。
</p>
