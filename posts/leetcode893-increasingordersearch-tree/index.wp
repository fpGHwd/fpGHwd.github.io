<p>
<a href="https://leetcode.com/problems/increasing-order-search-tree/">893. IncreasingOrderSearch Tree</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
class Solution {
    public:
        TreeNode* increasingBST(TreeNode* root) {
            if(root == nullptr)return nullptr;
            TreeNode *first = root, *last = root;
            inOrderRecursion(root, first, last);
            return first;
        }

       void inOrderRecursion(TreeNode* root,TreeNode*&amp; first, TreeNode*&amp; last){

           if(root == nullptr)return;
           TreeNode *first1, *last1;

           if(root-&gt;left){
               last1 = root-&gt;left;
               first = root-&gt;left;
               inOrderRecursion(root-&gt;left, first, last1);
               last1-&gt;left = nullptr; last1-&gt;right=root;
           }
           if(root-&gt;right){
               first1 = root-&gt;right;
               last = root-&gt;right;
               inOrderRecursion(root-&gt;right,first1,last);
               root-&gt;left = nullptr; root-&gt;right = first1;
           }
        }

};

</code></pre>

</div>
