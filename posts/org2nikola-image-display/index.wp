<p>
<b>设置</b>
</p>

<p>
先<a href="https://github.com/redguardtoo/org2nikola/issues/11">咨询</a>了作者，然后得到了思路：获得一个对 output html 进行自定义 render 的函数，然后自定义修改 html 。
</p>

<p>
设置 org2nikola 包变量的 <code>org2nikola-process-output-html-function</code> 为：
</p>

<div class="org-src-container">

<pre><code class="lang-lisp">
(setq org2nikola-process-output-html-function
 (lambda (html-text title post-slug)
   (progn (let* ((re-str "\\/home\\/.+?\\.\\(png\\|jpg\\|jpeg\\|bmp\\)"))
            (let* ((files-list (s-match-strings-all re-str html-text)))
              (dolist (file-path files-list)
                (message (format "file-path: %s" (car file-path)))
                (setq cmd (format "cp %s /home/wd/.config/nikola/images/" (car file-path)))
                (message cmd)
                (shell-command cmd))))
          (replace-regexp-in-string
           "file:.+?\\/[a-z0-9-]\\{34\\}\\/"
           "https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/"
           html-text))))

</code></pre>

</div>

<p>
其中用到了 <code>s-match-strings-all</code> 和 <code>replace-regexp-in-string</code> 两个函数。
</p>

<p>
整个过程中最重要的还是匹配文件地址和修改 github 图片资源 url 的两个正则表达式。我需要匹配字符串的是（目前只能匹配一个字符串，如果贴文本的话，写好博客后进行处理后面的真正图片的链接就不能进行转换了，所以用图片代替）：
<code>找不到图片了算了)○(￣□￣○)</code> 。
</p>

<p>
<b>获取图片地址</b>
</p>

<p>
我需要将图片的地址拿到并复制到 nikola/images 目录，这样 nikola 在发布的时候会对图片做一些处理，然后输出到 output/images 中。使用的正则是 <code>\\/home\\/.+?\\.\\(png\\|jpg\\|jpeg\\|bmp\\)</code> 。
</p>



<div class="figure">
<p><img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20200918_123005screenshot.png" alt="_20200918_123005screenshot.png" />
</p>
</div>


<p>
<b>替换图片地址</b>
</p>

<p>
我需要将形如 <code>file:///home/wd/Dropbox/text/org/.attach/(HashI/(UUID)/</code> 的所有字符串替换为 <code>https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/</code> ，使用的正则是 <code>"file:.+?\\/[a-z0-9-]\\{34\\}\\/</code> 。
</p>



<div class="figure">
<p><img src="https://raw.githubusercontent.com/fpGHwd/fpghwd.github.io/master/images/_20200918_122914screenshot.png" alt="_20200918_122914screenshot.png" />
</p>
</div>


<p>
<b>调试正则</b>
</p>

<p>
用到了 emacs 自带的 <code>re-builder</code> 来对当前 buffer 测试正则表达式，很好用。
</p>

<p>
<b>TODO</b>
</p>

<ol class="org-ol">
<li>由于没有循环，只能找到第一个图片的字符串然后替换成真实的 url, 需要完善匹配后的操作。（完成）</li>
<li>还只能匹配截图这样文件名的图片，需要完善正则表达式。（完成）</li>
</ol>
