<ol class="org-ol">
<li>Diameter of Binary Tree</li>
</ol>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
  public:
    int diameter = 0;
    int diameterOfBinaryTree(TreeNode *root) {
        depthTravel(root);
        return diameter;
    }
    int depthTravel(TreeNode *root) {
        if (root == nullptr)
            return 0;
        int left = depthTravel(root-&gt;left);
        int right = depthTravel(root-&gt;right);
        diameter = max(left + right, diameter);
        return 1 + max(left, right);
    }
};

</code></pre>

</div>


<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (106/106)

Runtime: 12 ms, faster than 88.39% of C++ submissions.

Memory Usage: 21 MB, less than 13.09% of C++ submissions.

</code></pre>

</div>
