<p>
<a href="https://leetcode.com/problems/construct-string-from-binary-tree/">606. Construct String from Binary Tree</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    public:
        string tree2str(TreeNode* t) {
            if(t == nullptr)return result;
            result.append(to_string(t-&gt;val));
            if(t-&gt;left){
                result.append(1,'(');
                tree2str(t-&gt;left);
                result.append(1,')');
            }else{
                if(t-&gt;right){
                    result.append("()");
                }
            }
            if(t-&gt;right){
                result.append(1,'(');
                tree2str(t-&gt;right);
                result.append(1,')');
            }
            return result;
        }
    private:
        string result;
};

</code></pre>

</div>

<p>
<b>Leetcode result</b>
</p>
<div class="org-src-container">

<pre><code class="lang-html">
Status: Accepted (162/162)

Runtime: 56 ms, faster than 20.91% of C++ submissions.

Memory Usage: 144.4 MB, less than 6.22% of C++ submissions.

</code></pre>

</div>

<p>
结果排倒数 ，以及显示不了:)这个emoji。</p>
