<p>
<a href="https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/">108. Convert Sorted Array to Binary Search Tree</a>
</p>

<p>
<b>Solution</b>
</p>

<div class="org-src-container">

<pre><code class="lang-C">
    /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
  public:
    TreeNode *sortedArrayToBST(vector&lt;int&gt; &amp;nums) {
        // create tree
        return toHeightBST(nums, 0, nums.size() - 1);
    }

    TreeNode *toHeightBST(vector&lt;int&gt; &amp;nums, int l, int r) {
        if (l &gt; r)
            return NULL;
        int mid = l + (r - l) / 2;
        TreeNode *root = new TreeNode(nums[mid]);
        root-&gt;left = toHeightBST(nums, l, mid - 1);
        root-&gt;right = toHeightBST(nums, mid + 1, r);
        return root;
    }
};

</code></pre>

</div>

<p>
一开始以为是树的高度的调整题，后来发现这个和 <b>用数组表示的树构造一棵树</b> 的做法差不多。
</p>
